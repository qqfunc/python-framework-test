name: Build

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fetch:
    name: Fetch
    runs-on: ubuntu-latest

    steps:
    - name: Get version information
      id: ver
      uses: actions/github-script@v7
      with:
        script: |
          const { data: xz } = await github.rest.repos.getLatestRelease({
            owner: "tukaani-project",
            repo: "xz",
          })
          console.log(xz)
          return { xz: xz.tag_name.slice(1) }
    - name: Show result
      run: echo ${{ toJson(steps.ver.outputs) }}

  build:
    name: Build
    needs: fetch
    runs-on: macos-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.13-dev']
        build-host: 
          - 'arm64-apple-ios'
          - 'arm64-apple-ios-simulator'
          - 'x86_64-apple-ios-simulator'

    steps:
    - name: Checkout ${{ github.repository }}
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      id: py
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        check-latest: true
    - name: Set version information
      id: pyver
      run: |
        echo "py=$(python -V | cut -wf 2)" >> $GITHUB_OUTPUT
    - name: Clone python/cpython ${{ matrix.python-version }}
      run: >
        gh repo clone python/cpython
        -- -b v${{ steps.pyver.outputs.py }} --depth=1
      env:
        GH_TOKEN: ${{ github.token }}
    - name: Download XZ Utils
      run: gh release download -R tukaani-project/xz -p xz-*.tar.gz
    - name: Add iOS/Resources/bin to PATH
      working-directory: cpython
      run: echo "$(pwd)/iOS/Resources/bin" >> $GITHUB_PATH
    - name: Configure
      working-directory: cpython
      run: >
        ./configure
        --enable-framework="./iOS/Frameworks/main/"
        --host=${{ matrix.build-host }}
        --build=arm64-apple-darwin
        --with-build-python="${{ steps.py.outputs.python-path }}"
    - name: Build Python.framework
      working-directory: cpython
      run: |
        make
        make install
    - name: Create an archive
      working-directory: cpython
      run: >
        tar -czf
        ./iOS/Frameworks/dist/Python.framework.tar.gz
        ./iOS/Frameworks/dist/Python.framework
